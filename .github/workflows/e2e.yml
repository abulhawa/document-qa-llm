name: E2E Tests

on:
  push:
    branches: [ master, dev ]
    paths:
      - "**.py"
      - "requirements/**"
      - "scripts/test.sh"
      - ".github/workflows/tests.yml"
  pull_request:
    branches: [ master, dev ]

concurrency:
  group: e2e-${{ github.ref }}
  cancel-in-progress: true

jobs:
  playwright-e2e:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: pip
          cache-dependency-path: |
            requirements/shared.txt
            requirements/dev.txt
            requirements/app.txt
            requirements/worker.txt

      - name: ♻️ Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 📦 Install app + dev dependencies
        run: |
          python -m pip install -U pip
          pip install -r requirements/shared.txt -r requirements/dev.txt -r requirements/app.txt

      - name: ♻️ Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/requirements/dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: 🌐 Install Playwright Chromium (with Linux deps)
        run: python -m playwright install --with-deps chromium

      - name: 🚀 Launch Streamlit (headless) on :8501
        env:
          BROWSER: none
        run: |
          set -e
          streamlit run main.py --server.headless true --server.port 8501 &
          echo "🔍 Waiting for Streamlit to be ready..."
          python -c "
          import time, urllib.request, sys
          url = 'http://localhost:8501'
          for _ in range(90):
              try:
                  with urllib.request.urlopen(url, timeout=2) as r:
                      if r.status == 200:
                          print('✅ Streamlit is up')
                          sys.exit(0)
              except Exception:
                  time.sleep(1)
          print('❌ Streamlit did not start in time')
          sys.exit(1)
          "

      - name: 🧪 Run Playwright E2E tests
        run: pytest -q tests/e2e --maxfail=1 --disable-warnings

      - name: 📤 Upload Playwright artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts
          path: |
            test-results/
            playwright-report/
            **/*.png
            **/*.webm
